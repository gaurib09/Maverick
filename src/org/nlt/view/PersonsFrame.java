/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.nlt.view;

import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Query;
import org.nlt.model.Persons;
import org.nlt.model.States;

/**
 *
 * @author Gauri Bhamkar
 */
public class PersonsFrame extends javax.swing.JFrame implements ParentInterface1
{

    /**
     * Creates new form PersonsFrame
     */
    public PersonsFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ageTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        phoneTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        stateComboBox1 = new javax.swing.JComboBox<>();
        stateNewButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        cityComboBox2 = new javax.swing.JComboBox<>();
        cityNewButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        submitButton1 = new javax.swing.JButton();
        updateButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        deleteButton3 = new javax.swing.JButton();
        resetjButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        personTable1 = new javax.swing.JTable();

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(2, 1, 20, 20));

        jPanel2.setLayout(new java.awt.GridLayout(6, 2, 10, 10));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Enter name:");
        jPanel2.add(jLabel1);

        nameTextField.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });
        jPanel2.add(nameTextField);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Enter Age:");
        jPanel2.add(jLabel2);

        ageTextField.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        ageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageTextFieldActionPerformed(evt);
            }
        });
        jPanel2.add(ageTextField);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Enter Phone:");
        jPanel2.add(jLabel3);

        phoneTextField.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        phoneTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneTextFieldActionPerformed(evt);
            }
        });
        jPanel2.add(phoneTextField);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("Select State:");
        jPanel2.add(jLabel4);

        jPanel6.setLayout(new java.awt.BorderLayout(10, 0));

        stateComboBox1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        stateComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateComboBox1ActionPerformed(evt);
            }
        });
        jPanel6.add(stateComboBox1, java.awt.BorderLayout.CENTER);

        stateNewButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        stateNewButton.setText("New");
        stateNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateNewButtonActionPerformed(evt);
            }
        });
        jPanel6.add(stateNewButton, java.awt.BorderLayout.EAST);

        jPanel2.add(jPanel6);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("Select City:");
        jPanel2.add(jLabel5);

        jPanel7.setLayout(new java.awt.BorderLayout(10, 0));

        cityComboBox2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel7.add(cityComboBox2, java.awt.BorderLayout.CENTER);

        cityNewButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        cityNewButton.setText("New");
        cityNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityNewButtonActionPerformed(evt);
            }
        });
        jPanel7.add(cityNewButton, java.awt.BorderLayout.EAST);

        jPanel2.add(jPanel7);

        jPanel4.setLayout(new java.awt.GridLayout(1, 3, 10, 10));

        submitButton1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        submitButton1.setText("Submit");
        submitButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(submitButton1);

        updateButton2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        updateButton2.setText("Update");
        updateButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(updateButton2);

        jButton1.setText("jButton1");
        jPanel4.add(jButton1);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.add(jPanel8);

        jPanel5.setLayout(new java.awt.GridLayout(1, 3, 10, 10));

        deleteButton3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        deleteButton3.setText("Delect");
        jPanel5.add(deleteButton3);

        resetjButton4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        resetjButton4.setText("Reset");
        jPanel5.add(resetjButton4);

        jButton2.setText("jButton2");
        jPanel5.add(jButton2);

        jPanel2.add(jPanel5);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        personTable1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        personTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(personTable1);

        jPanel3.add(jScrollPane1);

        jPanel1.add(jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 997, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void ageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageTextFieldActionPerformed

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed

    private void phoneTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneTextFieldActionPerformed

    private void submitButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButton1ActionPerformed
        try 
        {
            String name=nameTextField.getText();
            String age=ageTextField.getText();
            String phone=phoneTextField.getText();
            
            if (name.isEmpty()||age.isEmpty()||phone.isEmpty()) 
            {
                JOptionPane.showMessageDialog(this, "Invalid Entry", "Hibernate CRUD", 0);
            }
            else 
            {
                Persons person=new Persons();
                person.setCreated(new Date());
                person.setModified(new Date());
                person.setName(name);
                person.setAge(Integer.parseInt(age));
                person.setPhone(Long.parseLong(phone));
                //Cities citySelectedObject=cityFrame.cityHashSet.stream().filter(P ->P.getName)
                //person.setCity(citySelectedObject);
                person.setStatus(1);
                //person.setUser(loginUser);
                
                ses.beginTransaction();
                ses.save(person);
                ses.getTransaction().commit();
                JOptionPane.showMessageDialog(this, "Record Submitted", "Hibernate CRUD", 1);
                
                setTableData();
                resetData();
            }
        } 
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(this, ex, "Person CRUD", 0);
        }
    }//GEN-LAST:event_submitButton1ActionPerformed

    private void setTableData()
    {
        try 
        {
            ses.beginTransaction();
            Query query=ses.createQuery("from persons where status=1");
            List<Persons>personList=query.list();
            
            String[] cols={"ID","AGE","NAME","PHONE"};
            String[][] data=new String[personList.size()][cols.length];
            int i=0;
            
            for(Persons persons:personList)
            {
                data[i][0]=persons.getId()+"";
                data[i][1]=persons.getName()+"";
                data[i][2]=persons.getAge()+"";
                data[i][3]=persons.getPhone()+"";
                i++;
            }
            ses.getTransaction().commit();
            DefaultTableModel model=new DefaultTableModel(data,cols);
            personTable1.setModel(model);
        } 
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(this, ex, "Person CRUD", 0);
        }
    }
       
    public  void resetData()
    {
        nameTextField.setText("");
        ageTextField.setText("");
        phoneTextField.setText("");
        stateComboBox1.setSelectedIndex(0);
        cityComboBox2.setSelectedIndex(0);
        Object person = null;
    }
    
    private void updateButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateButton2ActionPerformed

    private void stateNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateNewButtonActionPerformed
        statesFrame.setVisible(true);
    }//GEN-LAST:event_stateNewButtonActionPerformed

    private void cityNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityNewButtonActionPerformed
        citiesFrame.setVisible(true);
    }//GEN-LAST:event_cityNewButtonActionPerformed

    private void stateComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stateComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageTextField;
    public javax.swing.JComboBox<String> cityComboBox2;
    private javax.swing.JButton cityNewButton;
    private javax.swing.JButton deleteButton3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField nameTextField;
    public javax.swing.JTable personTable1;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JButton resetjButton4;
    public javax.swing.JComboBox<String> stateComboBox1;
    private javax.swing.JButton stateNewButton;
    private javax.swing.JButton submitButton1;
    private javax.swing.JButton updateButton2;
    // End of variables declaration//GEN-END:variables

    public void setStatesData()
    {
        List<States> stateObjects = statesService.getStates(ses);
        citiesFrame.stateComboBox1.removeAllItems();
        this.stateComboBox1.removeAllItems();
        
        citiesFrame.stateComboBox1.addItem("SELECT");
        this.stateComboBox1.addItem("SELECT");
        
        for(States states:stateObjects)
        {
            citiesFrame.stateComboBox1.addItem(states.getName());
            this.stateComboBox1.addItem(states.getName());
        }
    }
}
